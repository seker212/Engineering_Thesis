<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ComeX.WPF">

    <Brush x:Key="DarkBlue1">#FF11182C</Brush>
    <Brush x:Key="DarkBlue2">#17213A</Brush>
    <Brush x:Key="DarkBlue3">#FF24314D</Brush>
    <Brush x:Key="LightBlue1">#D7E3EA</Brush>
    <Brush x:Key="LightBlue2">#A0B1CF</Brush>
    <Brush x:Key="Blue1">#81D5EF</Brush>

    <FontFamily x:Key="DefaultFont">Calibri</FontFamily>
    <FontFamily x:Key="HeaderFont">./Resources/Fonts/Nunito-Medium.ttf#Nunito Regular</FontFamily>
    
    <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlue1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="DefaultHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlue1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlue1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="DefaultPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlue1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="DefaultHeaderLabelStyle" TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFont}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource LightBlue1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style x:Key="DefaultButtonStyle"
           TargetType="Button">
        <Setter Property="FontFamily"
                Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{x:Null}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource DarkBlue3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="8" BorderThickness="2" Background="{TemplateBinding Background}">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF303030" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlue1}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkBlue2}" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="CornerRadius" Value="16" />
    </Style>
    
    <Style x:Key="WindowBorderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource DefaultBorderStyle}">
        <Setter Property="Background" Value="{StaticResource DarkBlue3}" />
    </Style>

    <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border" 
                CornerRadius="10" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <ContentPresenter x:Name="ContentPresenter"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="#FFBEE6FD"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="Border" Value="#FFC4E5F6"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="Border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Border" Value="#FFF4F4F4"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FFADB2B5"/>
                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BorderTextBoxTemplate" TargetType="{x:Type TextBox}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BorderPasswordBoxTemplate" TargetType="{x:Type PasswordBox}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="WindowRoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource RoundedButtonTemplate}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource DarkBlue1}" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBlue3}" />
    </Style>

</ResourceDictionary>